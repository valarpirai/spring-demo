receivers:
  otlp:
    protocols:
      grpc:
      # http:
  filelog:
    start_at: beginning
    include:
      - /example.log
    include_file_path: true
    multiline: {line_start_pattern: "\\n"}
  hostmetrics:
      collection_interval: 30s
      scrapers:
        cpu:
        memory:

exporters:
  coralogix:
    domain: "coralogix.in"
    private_key: "cxtp_uLMjnsEbcbWhboxWvGNZpA65mimOTY"
    application_name: "Demo Application"
    subsystem_name: "GraphQL service"
    timeout: 30s

processors:
  batch:
  tail_sampling:
    decision_wait: 20s
    policies:
      [
        {
          name: latency-policy-2,
          type: latency,
          latency: { threshold_ms: 150 }
        },
        {
          name: customer_id_policy,
          type: boolean_attribute,
          boolean_attribute: { key: app.force_sample, value: true },
        }
      ]
  filter:
    error_mode: ignore
    traces:
      span:
        # - 'attributes["code.function"] == "convertToDto"'
        # - attributes["end_point"] == nil
        # - attributes["http.request.method"] != nil


service:
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ tail_sampling ]
      # processors: [ batch ]
      exporters: [ coralogix ]
    logs:
      receivers: [ filelog ]
      processors: [ batch ]
      exporters: [ coralogix ]
    metrics:
      receivers: [ hostmetrics ]
      exporters: [ coralogix ]
